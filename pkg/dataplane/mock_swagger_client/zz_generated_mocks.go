// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -destination=mock_swagger_client/zz_generated_mocks.go -package=mock -source=client.go
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	swagger "github.com/Azure/msi-dataplane/internal/swagger"
	gomock "go.uber.org/mock/gomock"
)

// MockswaggerMSIClient is a mock of swaggerMSIClient interface.
type MockswaggerMSIClient struct {
	ctrl     *gomock.Controller
	recorder *MockswaggerMSIClientMockRecorder
}

// MockswaggerMSIClientMockRecorder is the mock recorder for MockswaggerMSIClient.
type MockswaggerMSIClientMockRecorder struct {
	mock *MockswaggerMSIClient
}

// NewMockswaggerMSIClient creates a new mock instance.
func NewMockswaggerMSIClient(ctrl *gomock.Controller) *MockswaggerMSIClient {
	mock := &MockswaggerMSIClient{ctrl: ctrl}
	mock.recorder = &MockswaggerMSIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockswaggerMSIClient) EXPECT() *MockswaggerMSIClientMockRecorder {
	return m.recorder
}

// Getcreds mocks base method.
func (m *MockswaggerMSIClient) Getcreds(ctx context.Context, credRequest swagger.CredRequestDefinition, options *swagger.ManagedIdentityDataPlaneAPIClientGetcredsOptions) (swagger.ManagedIdentityDataPlaneAPIClientGetcredsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Getcreds", ctx, credRequest, options)
	ret0, _ := ret[0].(swagger.ManagedIdentityDataPlaneAPIClientGetcredsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Getcreds indicates an expected call of Getcreds.
func (mr *MockswaggerMSIClientMockRecorder) Getcreds(ctx, credRequest, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Getcreds", reflect.TypeOf((*MockswaggerMSIClient)(nil).Getcreds), ctx, credRequest, options)
}
